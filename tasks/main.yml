---
- name: Include deploy start hook
  include_tasks: "{{ deploy_start_hook }}"
  when: deploy_start_hook is defined

- name: Install packages
  apt:
    name: "{{ _deploy_packages }}"

- name: Clone repository
  git:
    repo: "{{ deploy_git_repo }}"
    dest: "{{ deploy_dest }}"
    version: "{{ deploy_version | default(omit) }}"
    key_file: "{{ deploy_ssh_key | default(omit) }}"
    accept_hostkey: true
    ssh_opts: "-o StrictHostKeyChecking=no"
    force: "{{ deploy_override | default(omit) }}"

- name: Set config <core.fileMode> for repository
  git_config:
    name: core.fileMode
    value: false
    scope: local
    repo: "{{ deploy_dest }}"

- name: Check if composer packages directory exists
  stat:
    path: "{{ deploy_composer_packages_path }}"
  register: _deploy_composer_packages_path_info
  when: _php_role is defined and deploy_composer_path is defined

- name: Create composer packages directory
  file:
    path: "{{ deploy_composer_packages_path }}"
    state: directory
  when: _php_role is defined and deploy_composer_path is defined and not _deploy_composer_packages_path_info.stat.exists

- name: Install composer packages
  composer:
    command: install
    working_dir: "{{ deploy_composer_path | dirname }}"
    no_dev: "{{ 'yes' if deploy_env == 'prod' else 'no' }}"
  become: no
  when: _php_role is defined and deploy_composer_path is defined and not _deploy_composer_packages_path_info.stat.exists

- name: Check if npm packages directory exists
  stat:
    path: "{{ deploy_npm_packages_path }}"
  register: _deploy_npm_packages_path_info
  when: _nodejs_role is defined and deploy_npm_path is defined

- name: Create npm packages directory
  file:
    path: "{{ deploy_npm_packages_path }}"
    state: directory
  when: _nodejs_role is defined and deploy_npm_path is defined and not _deploy_npm_packages_path_info.stat.exists

- name: Install npm packages
  npm:
    path: "{{ deploy_npm_path | dirname }}"
  become: no
  when: _nodejs_role is defined and deploy_npm_path is defined and not _deploy_npm_packages_path_info.stat.exists

- name: Include deploy finish hook
  include_tasks: "{{ deploy_finish_hook }}"
  when: deploy_finish_hook is defined